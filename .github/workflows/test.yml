name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run backend tests
      run: |
        cd backend
        mvn clean test -Dspring.profiles.active=test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backend-test-results
        path: backend/target/surefire-reports/

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --run --reporter=verbose

    - name: Run frontend tests with coverage
      run: |
        cd frontend
        npm run test:coverage -- --run

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-coverage
        path: frontend/coverage/

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Verify Docker Compose
      run: |
        docker --version
        docker compose version

    - name: Start ClickHouse for integration testing
      run: |
        docker compose up -d clickhouse
        echo "Waiting for ClickHouse to start..."
        timeout 60 bash -c 'until curl -s http://localhost:8123/ping; do echo "ClickHouse not ready yet..."; sleep 2; done'
        echo "ClickHouse is ready!"
        curl -s http://localhost:8123/ping

    - name: Build backend
      run: |
        cd backend
        mvn clean package -DskipTests
      env:
        DB_URL: jdbc:clickhouse://localhost:8123/appdb
        DB_USERNAME: default
        DB_PASSWORD: app
        JWT_SECRET: please-change-this-secret-key-32bytes-minimum
        ADMIN_EMAIL: admin@example.com
        ADMIN_PASSWORD: admin123

    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Clean up
      if: always()
      run: docker compose down
